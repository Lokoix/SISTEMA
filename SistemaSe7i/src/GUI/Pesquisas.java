/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Beans.LeilaoBeans;
import Beans.LoteBeans;
import Beans.ProprietarioBeans;
import Beans.Restricoes.RestricaoBloqueioBeans;
import Beans.VeiculoBeans;
import Controller.LoteController;
import Controller.ProprietarioController;
import Controller.Restricoes.RestricaoBloqueioController;
import Controller.VeiculoController;
import DAO.LeilaoDAO;
import DAO.PesquisaDAO;
import Interface.BaseNacional;
import Interface.Bloqueio;
import Interface.Cadastro;
import importacao.arqtxt.Beans.ManipulaTxt;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author rafae
 */
public class Pesquisas extends javax.swing.JInternalFrame {

    /**
     * Creates new form Pesquisas
     */
    ManipulaTxt manipulaTxt;
    Cadastro iCadastro;
    BaseNacional iBaseNacional;
    Bloqueio iBloqueio;
    RestricaoBloqueioController conRestricaoBlo;
    VeiculoController conVeiculo;
    ProprietarioController conProprietario;
    LeilaoDAO leilaoD;
    LoteController conLote;
    List<File> arquivosEntrada;
    PesquisaDAO pesqDAO;

    public Pesquisas() {
        initComponents();
        
        barraProgresso
        
        leilaoD = new LeilaoDAO();

        conVeiculo = new VeiculoController();
        conProprietario = new ProprietarioController();
        conLote = new LoteController();
        conRestricaoBlo = new RestricaoBloqueioController();

        iCadastro = new Cadastro();
        iBaseNacional = new BaseNacional();
        iBloqueio = new Bloqueio();

        manipulaTxt = new ManipulaTxt();

        arquivosEntrada = new ArrayList<>();
        pesqDAO = new PesquisaDAO();

        for (LeilaoBeans leilao : leilaoD.buscarTodosLeiloes()) {
            cmb_Leilao.addItem(leilao);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_local = new javax.swing.JTextField();
        btn_iniciar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmb_Leilao = new javax.swing.JComboBox<>();
        barraProgresso = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lblexistentes = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lblatualizados = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblnovo = new javax.swing.JTextArea();

        setClosable(true);

        txt_local.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_localActionPerformed(evt);
            }
        });

        btn_iniciar.setText("Iniciar");
        btn_iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_iniciarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Leil√£o:");

        cmb_Leilao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_LeilaoActionPerformed(evt);
            }
        });

        barraProgresso.setForeground(new java.awt.Color(102, 255, 0));
        barraProgresso.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 255), 1, true));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Lotes Existentes");

        lblexistentes.setEditable(false);
        lblexistentes.setBackground(new java.awt.Color(255, 204, 204));
        lblexistentes.setColumns(10);
        lblexistentes.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        lblexistentes.setRows(5);
        jScrollPane1.setViewportView(lblexistentes);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Lotes Atualizados");

        lblatualizados.setEditable(false);
        lblatualizados.setBackground(new java.awt.Color(51, 255, 255));
        lblatualizados.setColumns(10);
        lblatualizados.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        lblatualizados.setRows(5);
        jScrollPane2.setViewportView(lblatualizados);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Lotes Novos");

        lblnovo.setEditable(false);
        lblnovo.setBackground(new java.awt.Color(153, 255, 153));
        lblnovo.setColumns(10);
        lblnovo.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        lblnovo.setRows(5);
        jScrollPane3.setViewportView(lblnovo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(barraProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 34, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_local, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmb_Leilao, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmb_Leilao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_iniciar)
                    .addComponent(txt_local, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(427, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(158, 158, 158)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_iniciarActionPerformed

        String destino = "C://" + ((LeilaoBeans) cmb_Leilao.getSelectedItem()).getDescricao() + "//pesquisas//";

        JOptionPane.showMessageDialog(null, "Destino: " + destino);

        if (new File(destino).mkdirs()) {
            JOptionPane.showMessageDialog(null, "Pasta Criada");
        }
        String local = txt_local.getText();

        listaDeArquivos(local, arquivosEntrada);// carregar o ArrayList de File, com os arquivos para subir no Servidor
        System.out.println("LISTA DE ARQUIVOS ENTRADA SIZE: " + arquivosEntrada.size());

        new Thread() {
            @Override
            public void run() {
                try {
                    barraProgresso.setMaximum(arquivosEntrada.size() - 1);
                    //System.out.println("tamanho Lista de arquivos.size: "+listaDeArquivos.size() + "tamanho Tipos TXT: "+ tipoTxt.size());
                    for (int i = 0; i < arquivosEntrada.size(); i++) {
                        LoteBeans lote = new LoteBeans();

                        lote.setLeilao((LeilaoBeans) cmb_Leilao.getSelectedItem());

                        ArrayList<String> result = new ArrayList<>(100);
                        String desc = "";

                        switch (tipoDeArquivo(arquivosEntrada.get(i).getName())) {
                            case 1:
                                lote.setNumeroLote(arquivosEntrada.get(i).getName().substring(0, arquivosEntrada.get(i).getName().indexOf("CAD")));
                                desc = arquivosEntrada.get(i).getName().substring(arquivosEntrada.get(i).getName().indexOf("CAD"), arquivosEntrada.get(i).getName().indexOf(".txt"));

                                if (!pesqDAO.existe(lote.getLeilao().getId(), lote.getNumeroLote(), desc)) {
                                    result = manipulaTxt.Leitura(arquivosEntrada.get(i));

                                    if (result.size() == 88) { // pesquisa de cadastro normal
                                        iCadastro.getLoteCadastro1(result, lote);
                                        lote.setVeiculo(conVeiculo.corrigirVeiculoPesquisaCadastro(lote.getVeiculo()));
                                        lote.setProprietario(conProprietario.CorrigirProprietarioPesquisaCadastro(lote.getProprietario()));
                                        conLote.corrigirLoteCadastro(lote, lblnovo, lblatualizados, arquivosEntrada.get(i).getName());

                                    } else if (result.size() == 11) { //pesquisa de cadastro sem registro
                                        iCadastro.getLoteCadastro2(result, lote);
                                        conLote.corrigirLoteCadastro(lote, lblnovo, lblatualizados, arquivosEntrada.get(i).getName());

                                    } else if (result.size() == 54) {
                                        iCadastro.getLoteCadastro3(result, lote); // pesquisa de cadastro de fora do estado
                                        lote.setVeiculo(conVeiculo.corrigirVeiculoPesquisaCadastro(lote.getVeiculo()));
                                        lote.setProprietario(conProprietario.CorrigirProprietarioPesquisaCadastro(lote.getProprietario()));
                                        conLote.corrigirLoteCadastro(lote, lblnovo, lblatualizados, arquivosEntrada.get(i).getName());

                                    } else {
                                        JOptionPane.showMessageDialog(null, "interface difere de CAD: " + arquivosEntrada.get(i).getName());
                                        break;
                                    }
                                    File arquivoDestino = new File(destino + arquivosEntrada.get(i).getName());
                                    copy(arquivosEntrada.get(i), arquivoDestino);
                                    pesqDAO.cadastrar(lote, desc, arquivoDestino.toString());
                                    break;
                                }
                                lblexistentes.setText(lblexistentes.getText() + "\n" + arquivosEntrada.get(i).getName());
                                break;
                            case 2:
                                System.out.println("case 2");
                                lote.setNumeroLote(arquivosEntrada.get(i).getName().substring(0, arquivosEntrada.get(i).getName().indexOf("BIN")));
                                desc = arquivosEntrada.get(i).getName().substring(arquivosEntrada.get(i).getName().indexOf("BIN"), arquivosEntrada.get(i).getName().indexOf(".txt"));

                                if (!pesqDAO.existe(lote.getLeilao().getId(), lote.getNumeroLote(), desc)) {

                                    result = manipulaTxt.Leitura(arquivosEntrada.get(i));

                                    if (result.size() == 62) {
                                        iBaseNacional.getLoteBaseNacional1(result, lote);
                                        lote.setVeiculo(conVeiculo.corrigirVeiculoPesquisa(lote.getVeiculo()));
                                        conLote.corrigirLote(lote, lblnovo, lblatualizados, arquivosEntrada.get(i).getName());

                                    } else {
                                        JOptionPane.showMessageDialog(null, "interface difere de BIN: " + arquivosEntrada.get(i).getName());
                                        break;
                                    }
                                    File arquivoDestino = new File(destino + arquivosEntrada.get(i).getName());
                                    copy(arquivosEntrada.get(i), arquivoDestino);
                                    pesqDAO.cadastrar(lote, desc, arquivoDestino.toString());
                                    break;
                                }
                                lblexistentes.setText(lblexistentes.getText() + "\n" + arquivosEntrada.get(i).getName());
                                break;
                            case 3:
                                System.out.println("case 3");
                                /*
                                lote.setNumeroLote(s.substring(0, s.indexOf("BLO")));
                                result = manipulaTxt.Leitura(local, s);

                                if (result.get(17).contains("OBITO") || result.get(17).contains("JUDICIAL")) {

                                } else {
                                    if (result.size() == 39) { // bloqueio padrao 1
                                        RestricaoBloqueioBeans restricaoBlo = new RestricaoBloqueioBeans();
                                        restricaoBlo.setLote(lote);
                                        iBloqueio.getBloqueio1(listaDeArquivos, restricaoBlo);
                                        conRestricaoBlo.corrigirBloqueioPesquisa();

                                    }
                                }*/
                                lblexistentes.setText(lblexistentes.getText() + "\n" + arquivosEntrada.get(i).getName());
                                break;
                            default:
                                lblexistentes.setText(lblexistentes.getText() + "\n" + arquivosEntrada.get(i).getName());
                                break;
                        }

                        //JOptionPane.showMessageDialog(null, "Arquivo lido: " + listaDeArquivos.get(i).toString());
                        //JOptionPane.showMessageDialog(null, "ID Leilao: " + ((LeilaoBeans) cmb_Leilao.getSelectedItem()).getId() + ", " + ((LeilaoBeans) cmb_Leilao.getSelectedItem()).getDescricao() + " Lote: " + lote.getNumeroLote() + "  " + listaDeArquivos.get(i).toString());
                        barraProgresso.setValue(i);
                    }
                    JOptionPane.showMessageDialog(null, "importa√ß√£o concluida");

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro da barra> " + e);
                }
            }
        }.start();


    }//GEN-LAST:event_btn_iniciarActionPerformed

    private void txt_localActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_localActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_localActionPerformed

    private void cmb_LeilaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_LeilaoActionPerformed

    }//GEN-LAST:event_cmb_LeilaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraProgresso;
    private javax.swing.JButton btn_iniciar;
    private javax.swing.JComboBox<Object> cmb_Leilao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea lblatualizados;
    private javax.swing.JTextArea lblexistentes;
    private javax.swing.JTextArea lblnovo;
    private javax.swing.JTextField txt_local;
    // End of variables declaration//GEN-END:variables

    public void listaDeArquivos(String local, List<File> lista) {
        File dir = new File(local);
        for (File f : dir.listFiles()) {// lista o que possui no diretorio dir
            if (f.isFile()) {//se for um arquivo true;
                lista.add(f);
            }
        }
    }

    public int tipoDeArquivo(String s) {
        if (s.contains("CAD")) {
            return 1;
        }
        if (s.contains("BIN")) {
            return 2;
        }
        if (s.contains("BLO")) {
            return 3;
        }
        if (s.contains("JUD")) {
            return 4;
        } else {
            return 0;
        }
    }

    public void copy(File src, File dst) throws IOException {
        InputStream in = new FileInputStream(src);
        OutputStream out = new FileOutputStream(dst);           // Transferindo bytes de entrada para sa√≠da
        byte[] buf = new byte[1024];
        int len;
        while ((len = in.read(buf)) > 0) {
            out.write(buf, 0, len);
        }
        in.close();
        out.close();
    }

}
